sss <- function(x,n) {}
?clear
??clear
x <- 1:10
if (x > 5){ x<- 0}
source('~/dev/R/testing.r')
z<- 10
f(3)
source('~/.active-rstudio-document')
y
source('~/.active-rstudio-document')
h(4)
h(4,5)
f = 42
h(4,5)
h(4)
h(4,67)
f = 4848488
h(4,67)
source('~/dev/R/testing.r')
library(datasets)
data(mtcars)
mtcars
mtcars
with(mtcars, tapply(hp, cyl, mean))
mtc <- with(mtcars, tapply(hp, cyl, mean))
mtc[3] - mtc[1]
sapply(split(mtcars$mpg, mtcars$cyl), mean)
con = url("http://biostat.jhsph.edu/~jleek/contact.html")
htmlCode <- readLines(con)
htmlCode
class(htmlCode)
str(htmlCode)
?sapply
htmlCode[c(10,20,30,100)]
sapply(htmlCode[c(10,20,30,100)], nchar )
urlfile <- "https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for"
df <- download.file( urlfile, "getdata_wksst8110.for", method="curl")
str(df)
df <- download.file( urlfile, "getdata_wksst8110.for")
fd <- read.table("getdata-wksst8110.for")
getwd()
setwd("~/classes/DataSciences/Class3")
getwd()
fd <- read.table("getdata-wksst8110.for")
fd <- read.table("wksst8110.txt")
x <- read.fwf(file="wksst8110.txt, widths=c(12, 7,4, 9,4, 9,4, 9,4)")
x <- read.fwf(file="wksst8110.txt", widths=c(12, 7,4, 9,4, 9,4, 9,4)")
""
x <- read.fwf(file="wksst8110.txt", widths=c(12, 7,4, 9,4, 9,4, 9,4))
head(x)
x <- read.fwf(file="wksst8110.txt", widths=c(12, 7,4, 9,4, 9,4, 9,4), skip=1)
head(x)
sapply(x$V4, sum)
sum( x$V4 )
get_pwd()
getwd()
p1 <- read.csv("getdata_data_ss06pid.csv")
summary(p1)
p1$aa <- ifelse(p1$AGR == 6 & p1$ACR == 3, TRUE, FALSE )
dim(p1)
v <- rep(FALSE,14931)
v.name <- "aa"
cbind(p1, v)
p1$aa <- ifelse(p1$AGR == 6 & p1$ACR == 3, TRUE, FALSE )
p1$aa <- as.bool(p1$aa)
p1$aa <- as.boolean(p1$aa)
table(p1$aa)
p1$aa
p1$AGR
p1
p1 <- read.csv("getdata_data_ss06hid.csv")
p1 <- read.csv("getdata_data_ss06hid.csv")
p1 <- read.csv("getdata-data-ss06hid.csv")
p1$aa <- ifelse(p1$AGR == 6 & p1$ACR == 3, TRUE, FALSE )
summary(p1$AGR)
summary(p1$ACR)
summary(p1$AGS)
p1$aa <- ifelse(p1$AGS == 6 & p1$ACR == 3, TRUE, FALSE )
head(which(p1$aa))
install.packages("jpeg")
library("jpeg", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
my_url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg"
jp <- readJPEG(my_url)
my_url <- "https://d396qusza40orc.cloudfront.net/getdata-jeff.jpg"
jp <- readJPEG(my_url)
jp <- readJPEG(readBin(my_url))
my_url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg"
jp <- readJPEG(readBin(my_url))
jp <- readJPEG("getdata-jeff.jpg")
quantile(jp, probs= seq(.3, .8))
jp <- readJPEG("getdata-jeff.jpg", native=TRUE)
quantile(jp, probs= seq(.3,.8))
quantile(jp, probs= c(.3,.8))
gdp <- read.csv("getdata-data-GDP.csv")
names(gdp)
head(gdp)
gdp <- read.csv("getdata-data-GDP.csv", header=T, skip=3)
head(gdp)
dim(gdp)
gdp <- read.csv("getdata-data-GDP.csv", header=T, skip=3, skipNul=T)
dim(gdp)
head(gdp)
class(gdp)
fs <- read.csv("getdata-data-EDSTATS_Country.csv")
head(fs)
names(fs)
fs[[28]]
head(gdp)
gdp[[1]]
head(fs)
gd1 <- gdp[[1]]
gd1
head(fs)
fs1 <- [fs$WB.2,code]
fs1 <- [fs$WB.2.code]
fs1 <- fs$WB.2.code
fs1
head(gdp)
gd1
head(fs)
lu <- read.csv("EDStats_Country.csv", header=T)
lu <- read.csv("EDStats_Countrycl.csv", header=T)
head(lu)
str(lu)
class(lu)
str(ws)
str(fs)
str(lu)
lu2 <- lu.subset(,lu[c(1,5)])
lu2 <- subset(lu,select = c(1,5))
lu2
head(lu2)
fs2 <- merge(fs, lu2, all=T)
str(fs2)
dim(fs2)
dim(fs)
tail fs2
tail(fs2)
dim(fs)
dim(fs2)
291-234
head(tail(fs2, 60))
head(tail(fs2, 60),20)
str(fs)
dim(fs)
names(gdp)
gdp[,1]
dim(gdp)
dim(fs)
g1 <- gdp[,1]
g1
f1 <- fs[,1]
f1
class(f1)
class(g1)
r1 <- f1 %in% g1
r1
table r1
table(r1)
r1 <- g1 %in% f1
table(r1)
gdp
str(gdp)
gdp2 <- subset(gdp, !is.na(gdp[[2]]), c(1,2,5))
dims(gdp2)
dim(gdp2)
dim(gdp)
gdp2 <- subset(gdp, !is.na(gdp[2]), c(1,2,5))
dim(gdp2)
gdp2[2]
head(gdp2[2])
gdp2 <- subset(gdp, is.numeric(gdp[2]), c(1,2,5))
dim(gdp2)
gdp2 <- subset(gdp, gdp[2]> 0, c(1,2,5))
gdp2 <- subset(gdp, as.numberic(gdp[2])> 0, c(1,2,5))
gdp2 <- subset(gdp, as.numeric(gdp[2])> 0, c(1,2,5))
gdp2 <- subset(gdp, as.character(gdp[2]) != "", c(1,2,5))
dim(gdp2)
str(gdp2)
table(gdp[2])
table(gdp2[2])
gdp2 <- subset(gdp, as.character(gdp[2]).length < 4, c(1,2,5))
gdp2 <- subset(gdp, length(as.character(gdp[2])) < 4, c(1,2,5))
dim(gdp2)
g3 <- length(as.character(gdp[2]))
str(g3)
g3
g3 <- as.character(gdp[2]).length
g3 <- gdp[2].length
g3 <- gdp[,2].length
g3 <- length(gdp[,2])
g3
gdp <- read.csv("getdata-data-GDP2.csv", headers=T)
gdp <- read.csv("getdata-data-GDP2.csv", header=T)
g1 <- gdp[,1]
r1 <- g1 %in% f1
r1
table(r1)
gdp
ls
str(fs)
dim(gdp)
dim(fs)
names(gdp[,1])
names(gdp)
names(fs)
fg <-merge(fs,gdp, by.x="CountryCode", by.y="countrycode", all=T)
dim(fg)
str(fg)
fg1 <- subset(fg,fg$Income.Group == "High income: OECD", c(1,4,34))
head(fg1)
as.numeric(fg1[3])
as.numeric(fg1[,3])
dim(fg1)
fg1 <- subset(fg,fg$Income.Group == "High income: OECD", c(1,5,34))
head(fg1)
fg1 <- subset(fg,fg$Income.Group == "High income: OECD", c(1,3,34))
head(fg1)
names(fg)
str(fg)
fg1 <- subset(fg,fg$Income.Group == "High income: OECD", c(1,3,31,34))
head(fg1)
fg1.names <- c("cc", "ig", "nm", "gdp")
head(fg1)
fg1$gdp <- as.numeric(gsub(",", "", as.character(gdp[3])))
fg1
class(fg1[3])
class(fg1[1,3])
fg1$gdp <- as.numeric(gsub(",", "", as.character(gdp[[3]])))
fg1$gdp <- as.numeric(gsub(",", "", as.character(gdp[,3])))
head(fg1)
fg1$gdp <- as.numeric(gsub(",", "", as.character(gdp$X.millions.of.US.dollars.)))
head(fg1)
fg1$gdp <- as.numeric(gsub(",", "", as.character(fg1$X.millions.of.US.dollars.)))
head(fg1)
mean(fg1$gdp)
fg2 <- subset(fg,fg$Income.Group == "High income: nonOECD", c(1,3,31,34))
fg2$gdp <- as.numeric(gsub(",", "", as.character(fg2$X.millions.of.US.dollars.)))
mean(fg2$gdp)
head(fg2)
str(fg)
fg2 <- subset(fg,fg$Income.Group == "High income: nonOECD", c(1,3,31,32,34))
fg1 <- subset(fg,fg$Income.Group == "High income: OECD", c(1,3,31,32,34))
mean(fg2$Ranking)
head(fg2)
mean(fg1$Ranking)
fg22 <- subset(fg2, !is.na(fg2.Ranking))
fg22 <- subset(fg2, !is.na(fg2$Ranking))
mean(fg22$Ranking)
fg.Ranking
fg$Ranking
fg3 <- subset(fg, !is.na(fg$Ranking))
install.packages("Hmisc")
library("Hmisc", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
fg3$qq <- cut2(fg3$Ranking,g=5)
table(fg3$qq)
fg33 <- subset(fg3, fg3$qq == "[115,153)")
dim(fg33)
fg33$Income.Group
names(fs)
hid <- read.csv("getdata-data-ss06hid.csv", header=T)
nm <- names(hid)
class(nm)
nm
nm2 <- strsplit(nm, "wgtp")
nm2
nm2[[123]]
str(gdp)
gdp$dollars <- as.numeric(gsub(",","", as.character(gdp[,4])))
head(gdp)
mean(gdp$dollars)
grep("^United", gdp$Economy)
grep("^United*", gdp$Economy)
grep("^United", gdp$Economy)
grep("^United", gdp$Economy)
gdp[c(1,6,32),]
dim(gdp2)
gdp
stats(lu)
str(lu)
str(gdp)
head(lu)
dim(lu2)
dim(gdp2)
head(gdp2)
head(lu2)
gdp$"Special Notes"
gdp$'Special Notes'
gdp$Special_Notes
gdp[10]
gdp[,10]
names(gdp)
names(lu)
lu$Special.Notes
lu$FYE.June <- grep("[Ff]iscal year end: {0,2}[June]")
lu$FYE.June <- grep("[Ff]iscal year end: {0,2}[June]", lu$Special.Notes)
lu$FYE.June <- ifelse(grep("[Ff]iscal year end: {0,2}[June]", lu$Special.Notes), T, F)
table(lu$FYE.June)
lu$FYE.June
names(lu)
lu$FYE.June <- ifelse(grep("[Ff]iscal year end: {0,2}[June]", lu$Special.Notes), T, F)
grep("[Ff]iscal year end: {0,2}[June]", lu$Special.Notes)
tj <- grep("[Ff]iscal year end: {0,2}[June]", lu$Special.Notes)
length(tj)
lu[tj,c(1,2,3,4,5,6)]
names(lu)
install.packages("quantmod")
library("quantmod", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
amzn = getSymbols("AMZN",auto.assign=FALSE)
sampleTimes <- index(amzn)
sampleTimes
length(sampleTimes)
dtTimes <- as.Date(sampleTimes)
dtTimes
subset(dtTimes, x > as.Date("2011-12-31") & x < as.Date("2013-1-1"))
subset(dtTimes, x > as.Date("2011-12-31") & x < as.Date("2013-01-01"))
class(dtTimes)
install.packages("lubridate")
library("lubridate", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
diff <- new_difftime(years=1)
diff <- new_difftime(days=366)
my_interval <- as.interval(diff, ymd("2012-01-01"))
my_interval
diff <- new_difftime(days=365)
my_interval <- as.interval(diff, ymd("2012-01-01"))
my_interval
dt2 <- dtTimes %within% my_interval
length(dt2)
length(dtTimes)
dt2
table(dt2)
dt2 <- subset(dtTimes, dtTimes %within% my_interval)
length(dt2)
dt2
weekdays(dt2)
table(weekdays(dt2))
getwd()
setwd("UCI HAR Dataset")
getwd()
features_raw <- read.table("features.txt", sep = " ", col.names= c("rowNum", "rawFeatureName"))
head(features_raw)
featureName_split <- strsplit(feature_raw, "[\\-,]")
featureName_split <- strsplit(features_raw, "[\\-,]")
featureName_split <- strsplit(features_raw$rawFeatureName, "[\\-,]")
featureName_split <- strsplit(features_raw$rawFeatureName, "[-,]")
featureName_split <- strsplit(features_raw$rawFeatureName, [-,])
featureName_split <- strsplit(features_raw$rawFeatureName, "[-,]")
featureName_split <- strsplit(features_raw$rawFeatureName, "[\-,]")
featureName_split <- strsplit(features_raw$rawFeatureName, "[\\-,]")
featureName_split <- strsplit(features_raw$rawFeatureName, "[\\-\\,]")
featureName_split <- strsplit(features_raw$rawFeatureName, "\\-|\\,")
isX <- grep(features_raw$rawFeatureName, "X")
isX
isX <- grep(features_raw$rawFeatureName, ".*X.*")
isX <- grep( ".*X.*", features_raw$rawFeatureName )
isX
isY <- grep( ".*Y.*", features_raw$rawFeatureName )
isZ <- grep( ".*Z.*", features_raw$rawFeatureName )
table(length(c(isX, isY, isZ)))
length(c(isX, isY, isZ))
length(isX)
length(isY)
length(isZ)
561 - 321
source('~/classes/DataSciences/Class3/assign3.R')
getFactors('~/classes/DataSciences/Class3/UCI HAR Dataset')
features
source('~/classes/DataSciences/Class3/assign3.R')
source('~/classes/DataSciences/Class3/assign3.R')
getwd()
getFeatures('.')
features <- getFeatures('.')
source('~/classes/DataSciences/Class3/assign3.R')
getwd()
activityLabels <- getActivityLabels('.')
source('~/classes/DataSciences/Class3/assign3.R')
activityLabels <- getActivityLabels('.')
activityLabels
head(features)
getwd()
setwd("test")
getwd()
xtest <- read.table('X_test.txt')
ytest <- read.table('Y_test.txt')
stest <- read.table('subject_test.txt')
xtest[1,]
setwd('../trial')
setwd('..')
setwd('trial')
getwd()
setwd("train")
strain <- read.table('subject_train.txt')
strain <- read.table('Y_train.txt')
strain <- read.table('subject_train.txt')
ytrain <- read.table('Y_train.txt')
xtrain <- read.table('X_train.txt')
activityLabels
getwd()
setwd("..")
getwd()
file.exists("train")
newpath <- paste( c("/Users/s7ry93r/classes/DataSciences/Class3/UCI HAR Dataset", "train"), sep="/" )
newpath
newpath <- paste( "/Users/s7ry93r/classes/DataSciences/Class3/UCI HAR Dataset", "train", sep="/" )
newpath
table(ytest)
table(stest)
names(stest) <- "Subject"
head(stest)
activityLabels
activity <- activityLabels
names(activity) <- c("activityLabel", "activityDesc")
activity
View(activityLabels)
View(activityLabels)
table(stest)
table(ytest)
class (activity)
class (ytest)
head (activity)
head(ytest)
m1 <- merge(ytest, activity, by.x="V1", by.y="activityLabel")
m1
table(m1)
head(m1)
m2 <- m1[2]
m2
head(m2)
m1 <- merge(ytest, activity, by.x="V1", by.y="activityLabel")[2]
head(m1)
grep("avg|aver|mean|std|dev", features, ignore.case=T)
class(features)
dim(features)
head(features)
grep("avg|aver|mean|std|dev", features$featureName, ignore.case=T)
m1 <- grep("avg|aver|mean|std|dev", features$featureName, ignore.case=T)
m2 <- features[m1]
m2 <- subset(features, m1)
m2 <- subset(features, m1=features$rowNum)
m2
m2
dim(m2)
dim(m1)
m1 <- grep("avg|aver|mean|std|dev", features$featureName, ignore.case=T)
m1
m2 <- subset(features, m1==features$rowNum)
m2 <- features[m1]
m2 <- features[1]
m2 <- features$featureName[1]
m2
m2 <- features$featureName[m1]
m2
m1
m3 = xtest[,m1]
names(stest); names(ytest)
ytestA <- merge(ytrain, activity, by.x="V1", by.y="activityLabel")[2]
head(ytestA)
test <- cbind(stest, ytestA, xtest)
ytestA <- merge(ytest, activity, by.x="V1", by.y="activityLabel")[2]
test <- cbind(stest, ytestA, xtest)
mtest <- melt(test, id=c(1:2),measure.vars=c(3:563))
library("data.table", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
mtest <- melt(test, id=c(1:2),measure.vars=c(3:563))
library("reshape2", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
mtest <- melt(test, id=c(1:2),measure.vars=c(3:563))
head(mtest)
head(mtest,30)
head(mtest,30:60)
tail(head(mtest,120),30)
tail(mtest)
c1 <- names(test)[1:2]
c1
c2 <- names(test)[3:563]
head(c2)
names(xtest)
head(features)
names(xtest) <- features$featureName
test <- cbind(stest, ytestA, xtest)
mtest <- melt(test, id=c(1:2),measure.vars=c(3:563))
head(mtest,30)
head(mtest)
mtest2 <- dcast(mtest, Subject ~ variable, mean)
mtest2 <- dcast(mtest, Subject+activityDesc ~ variable, mean)
mtest2 <- dcast(mtest, Subject+activityDesc ~ variable, mean, drop=F)
mtest2 <- dcast(mtest, Subject + activityDesc ~ variable, mean, drop=F)
head(mtest2[1:4])
head(mtest2[1:4], 30)
mtest2 <- dcast(mtest, Subject + activityDesc ~ variable, mean)
head(mtest2[1:4], 30)
source('~/classes/DataSciences/Class3/assign3.R')
source('~/classes/DataSciences/Class3/assign3.R')
getwd()
runTidyData(".")
getwd()
runTidyData(getwd())
source('~/classes/DataSciences/Class3/assign3.R')
runTidyData(".")
source('~/classes/DataSciences/Class3/assign3.R')
source('~/classes/DataSciences/Class3/assign3.R')
runTidyData(".")
source('~/classes/DataSciences/Class3/assign3.R')
runTidyData(".")
source('~/classes/DataSciences/Class3/assign3.R')
runTidyData(".")
source('~/classes/DataSciences/Class3/assign3.R')
m1 <- runTidyData(".")
source('~/classes/DataSciences/Class3/assign3.R')
m1 <- runTidyData(".")
m1
head(m1,1)
source('~/classes/DataSciences/Class3/assign3.R')
